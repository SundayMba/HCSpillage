// <auto-generated />
using HCSpillage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HCSpillage.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221207090844_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HCSpillage.Models.DataPresentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Config")
                        .HasColumnType("bit");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verify")
                        .HasColumnType("bit");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Config = true,
                            Data = "Gas detected",
                            DeviceId = "A123",
                            Location = "Uyo",
                            Status = "On",
                            Time = "09:08",
                            Verify = false,
                            date = "07/12/2022"
                        },
                        new
                        {
                            Id = 2,
                            Config = false,
                            Data = "Gas detected",
                            DeviceId = "A223",
                            Location = "Abak",
                            Status = "Off",
                            Time = "09:08",
                            Verify = true,
                            date = "07/12/2022"
                        },
                        new
                        {
                            Id = 3,
                            Config = true,
                            Data = "Gas detected",
                            DeviceId = "A523",
                            Location = "Abak",
                            Status = "Off",
                            Time = "09:08",
                            Verify = true,
                            date = "07/12/2022"
                        },
                        new
                        {
                            Id = 4,
                            Config = false,
                            Data = "Gas detected",
                            DeviceId = "A423",
                            Location = "Oron",
                            Status = "On",
                            Time = "09:08",
                            Verify = false,
                            date = "07/12/2022"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
